{"version":3,"sources":["webpack:///static/js/registerSw.bbb5360efe11e16ce241.js","webpack:///./scripts/app.js"],"names":["webpackJsonp","8","module","exports","__webpack_require__","btnClick","isSubscribe","unsubscribeUser","subscribeUser","urlB64ToUint8Array","base64String","padding","repeat","length","base64","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","applicationServerKey","applicationServerPublicKey","swRegistration","pushManager","subscribe","userVisibleOnly","then","subscription","console","log","JSON","stringify","updateBtn","catch","err","getSubscription","unsubscribe","btn","innerText","p","document","querySelector","navigator","serviceWorker","register","swReg","addEventListener","error","warn","textContent"],"mappings":"AAAAA,cAAc,IAERC,EACA,SAAUC,EAAQC,EAASC,GAEjC,YCiBA,SAASC,KACDC,EACAC,IAEAC,IAGR,QAASC,GAAoBC,GASzB,IAAK,GARCC,GAAU,IAAIC,QAAQ,EAAIF,EAAaG,OAAS,GAAK,GACrDC,GAAUJ,EAAeC,GAC5BI,QAAQ,MAAO,KACfA,QAAQ,KAAM,KAEXC,EAAUC,OAAOC,KAAKJ,GACtBK,EAAc,GAAIC,YAAWJ,EAAQH,QAElCQ,EAAI,EAAGA,EAAIL,EAAQH,SAAUQ,EAClCF,EAAYE,GAAKL,EAAQM,WAAWD,EAExC,OAAOF,GAEX,QAASX,KACL,GAAMe,GAAuBd,EAAmBe,EAChDC,GAAeC,YAAYC,WACvBC,iBAAiB,EACjBL,qBAAsBA,IACvBM,KAAK,SAACC,GACLC,QAAQC,IAAI,sBAAuBC,KAAKC,UAAUJ,IAClDxB,GAAc,EACd6B,MACDC,MAAM,SAACC,GACNN,QAAQC,IAAI,sBAAuBK,KAI3C,QAAS9B,KACLkB,EAAeC,YAAYY,kBAAkBT,KAAK,SAACC,GAC/C,GAAIA,EACA,MAAOA,GAAaS,gBAEzBH,MAAM,SAACC,GACNN,QAAQC,IAAI,kBAAmBK,KAChCR,KAAK,WACJE,QAAQC,IAAI,wBACZ1B,GAAc,EACd6B,MAIR,QAASA,KACD7B,GACAkC,EAAIC,UAAY,OAChBC,EAAED,UAAY,+GAEdD,EAAIC,UAAY,OAChBC,EAAED,UAAY,2GA7EtB,GAAIhB,GAAiB,KACjBnB,GAAc,EACZkB,EAA6B,2FACnC,WACI,GAAIgB,GAAMG,SAASC,cAAc,SAE7B,kBAAmBC,YAAa,eAAiB5B,QACjD4B,UAAUC,cAAcC,SAAS,SAASlB,KAAK,SAACmB,GAC5CvB,EAAiBuB,EACjBR,EAAIS,iBAAiB,QAAS5C,GAAU,KACzC+B,MAAM,SAACc,GACNnB,QAAQmB,MAAM,uBAAwBA,MAG1CnB,QAAQoB,KAAK,mCACbX,EAAIY,YAAc,wBAI1B,IAAIV,GAAIC,SAASC,cAAc,KAC3BJ,EAAMG,SAASC,cAAc,aDqE9B","file":"static/js/registerSw.bbb5360efe11e16ce241.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 8:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar swRegistration = null;\nvar isSubscribe = false;\nvar applicationServerPublicKey = 'BO_R6m8osilNmdOhEHk-KF0o1u-EPruOL1bDaISHwDwSLacPsh35Hg41nZpS00XeCLG-KbGEqx35x6PKsdZNVCk';\n(function () {\n    var btn = document.querySelector('button');\n\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\n        navigator.serviceWorker.register('sw.js').then(function (swReg) {\n            swRegistration = swReg;\n            btn.addEventListener('click', btnClick, true);\n        }).catch(function (error) {\n            console.error('Service Worker Error', error);\n        });\n    } else {\n        console.warn('Push messaging is not supported');\n        btn.textContent = 'Push Not Supported';\n    }\n})();\n\nvar p = document.querySelector('p');\nvar btn = document.querySelector('button');\n\nfunction btnClick() {\n    if (isSubscribe) {\n        unsubscribeUser();\n    } else {\n        subscribeUser();\n    }\n}\nfunction urlB64ToUint8Array(base64String) {\n    var padding = '='.repeat((4 - base64String.length % 4) % 4);\n    var base64 = (base64String + padding).replace(/\\-/g, '+').replace(/_/g, '/');\n\n    var rawData = window.atob(base64);\n    var outputArray = new Uint8Array(rawData.length);\n\n    for (var i = 0; i < rawData.length; ++i) {\n        outputArray[i] = rawData.charCodeAt(i);\n    }\n    return outputArray;\n}\nfunction subscribeUser() {\n    var applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\n    swRegistration.pushManager.subscribe({\n        userVisibleOnly: true,\n        applicationServerKey: applicationServerKey\n    }).then(function (subscription) {\n        console.log('user is subscribed:', JSON.stringify(subscription));\n        isSubscribe = true;\n        updateBtn();\n    }).catch(function (err) {\n        console.log('failed to subscribe', err);\n    });\n}\n\nfunction unsubscribeUser() {\n    swRegistration.pushManager.getSubscription().then(function (subscription) {\n        if (subscription) {\n            return subscription.unsubscribe();\n        }\n    }).catch(function (err) {\n        console.log('err unsubscribe', err);\n    }).then(function () {\n        console.log('user is unsubscribed');\n        isSubscribe = false;\n        updateBtn();\n    });\n}\n\nfunction updateBtn() {\n    if (isSubscribe) {\n        btn.innerText = '订阅成功';\n        p.innerText = 'ok, we will message you at every time picture change. and thanks for your subscribe,you like is our chase.';\n    } else {\n        btn.innerText = '订阅图片';\n        p.innerText = 'you can subscribe, then we will message you picture change. dont you want see new picture?its beatiful.';\n    }\n}\n\n/***/ })\n\n},[8]);\n\n\n// WEBPACK FOOTER //\n// static/js/registerSw.bbb5360efe11e16ce241.js","let swRegistration = null;\r\nlet isSubscribe = false;\r\nconst applicationServerPublicKey = 'BO_R6m8osilNmdOhEHk-KF0o1u-EPruOL1bDaISHwDwSLacPsh35Hg41nZpS00XeCLG-KbGEqx35x6PKsdZNVCk';\r\n(() => {\r\n    let btn = document.querySelector('button');\r\n\r\n    if ('serviceWorker' in navigator && 'PushManager' in window) {\r\n        navigator.serviceWorker.register('sw.js').then((swReg) => {\r\n            swRegistration = swReg;\r\n            btn.addEventListener('click', btnClick, true);\r\n        }).catch((error) => {\r\n            console.error('Service Worker Error', error);\r\n        });\r\n    } else {\r\n        console.warn('Push messaging is not supported');\r\n        btn.textContent = 'Push Not Supported';\r\n    }\r\n})();\r\n\r\nlet p = document.querySelector('p');\r\nlet btn = document.querySelector('button');\r\n\r\nfunction btnClick () {\r\n    if (isSubscribe) {\r\n        unsubscribeUser();\r\n    } else {\r\n        subscribeUser();\r\n    }\r\n}\r\nfunction urlB64ToUint8Array (base64String) {\r\n    const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n    const base64 = (base64String + padding)\r\n      .replace(/\\-/g, '+')\r\n      .replace(/_/g, '/');\r\n\r\n    const rawData = window.atob(base64);\r\n    const outputArray = new Uint8Array(rawData.length);\r\n\r\n    for (let i = 0; i < rawData.length; ++i) {\r\n        outputArray[i] = rawData.charCodeAt(i);\r\n    }\r\n    return outputArray;\r\n}\r\nfunction subscribeUser () {\r\n    const applicationServerKey = urlB64ToUint8Array(applicationServerPublicKey);\r\n    swRegistration.pushManager.subscribe({\r\n        userVisibleOnly: true,\r\n        applicationServerKey: applicationServerKey\r\n    }).then((subscription) => {\r\n        console.log('user is subscribed:', JSON.stringify(subscription));\r\n        isSubscribe = true;\r\n        updateBtn();\r\n    }).catch((err) => {\r\n        console.log('failed to subscribe', err);\r\n    });\r\n}\r\n\r\nfunction unsubscribeUser () {\r\n    swRegistration.pushManager.getSubscription().then((subscription) => {\r\n        if (subscription) {\r\n            return subscription.unsubscribe();\r\n        }\r\n    }).catch((err) => {\r\n        console.log('err unsubscribe', err);\r\n    }).then(() => {\r\n        console.log('user is unsubscribed');\r\n        isSubscribe = false;\r\n        updateBtn();\r\n    })\r\n}\r\n\r\nfunction updateBtn () {\r\n    if (isSubscribe) {\r\n        btn.innerText = '订阅成功';\r\n        p.innerText = 'ok, we will message you at every time picture change. and thanks for your subscribe,you like is our chase.'\r\n    } else {\r\n        btn.innerText = '订阅图片';\r\n        p.innerText = 'you can subscribe, then we will message you picture change. dont you want see new picture?its beatiful.'\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./scripts/app.js"],"sourceRoot":""}